unit UFabricaNova;

interface

uses
  System.SysUtils, System.Types, System.UITypes, System.Classes, System.Variants, 
  FMX.Types, FMX.Graphics, FMX.Controls, FMX.Forms, FMX.Dialogs, FMX.StdCtrls,
  UCadPadrao, System.Rtti, FMX.Grid.Style, FMX.ActnList, System.Actions,
  FMX.TabControl, FMX.ScrollBox, FMX.Grid, FMX.Edit, FMX.Controls.Presentation,
  FMX.Objects, FMX.TreeView, FMX.Layouts, Fmx.Bind.Grid,
  System.Bindings.Outputs, Fmx.Bind.Editors, Data.Bind.EngExt,
  Fmx.Bind.DBEngExt, Data.Bind.Components, Data.Bind.Grid, Data.Bind.DBScope,
  FMX.ListBox, FMX.DateTimeCtrls, FMX.EditBox, FMX.SpinBox,UMsgDlg,
  FireDAC.Stan.Intf, FireDAC.Stan.Option, FireDAC.Stan.Param,
  FireDAC.Stan.Error, FireDAC.DatS, FireDAC.Phys.Intf, FireDAC.DApt.Intf,
  FireDAC.Stan.Async, FireDAC.DApt, Data.DB, FireDAC.Comp.DataSet,
  FireDAC.Comp.Client;

type
  TfrmFabricaRacaoNova = class(TfrmCadPadrao)
    TreeViewItem1: TTreeViewItem;
    Image4: TImage;
    TreeViewItem2: TTreeViewItem;
    Image6: TImage;
    TreeViewItem3: TTreeViewItem;
    Image7: TImage;
    BindSourceDB1: TBindSourceDB;
    LinkGridToDataSourceBindSourceDB1: TLinkGridToDataSource;
    BindingsList1: TBindingsList;
    Label3: TLabel;
    Edit1: TEdit;
    EditButton3: TEditButton;
    ClearEditButton1: TClearEditButton;
    Label23: TLabel;
    edtPreMistura: TEdit;
    EditButton5: TEditButton;
    ClearEditButton2: TClearEditButton;
    Label14: TLabel;
    cbxCentroCustoF: TComboBox;
    Label16: TLabel;
    cbxTipoBaixaF: TComboBox;
    Label15: TLabel;
    edtOperadorF: TEdit;
    EditButton4: TEditButton;
    GroupBox3: TGroupBox;
    edtFDataEntATE: TDateEdit;
    Label12: TLabel;
    edtFDataEntDE: TDateEdit;
    Label13: TLabel;
    SaveDialog1: TSaveDialog;
    layPopUpCad: TLayout;
    RecBlack: TRectangle;
    recPopup: TRectangle;
    Layout234: TLayout;
    Layout235: TLayout;
    Layout236: TLayout;
    Label103: TLabel;
    Image161: TImage;
    Layout237: TLayout;
    Rectangle48: TRectangle;
    Label104: TLabel;
    btnVoltar: TLabel;
    Layout11: TLayout;
    Rectangle9: TRectangle;
    Layout12: TLayout;
    Layout13: TLayout;
    Layout14: TLayout;
    Label30: TLabel;
    Label31: TLabel;
    Label32: TLabel;
    Label33: TLabel;
    Label34: TLabel;
    cbxTipoBaixaEdita: TComboBox;
    cbxCentroCustoEdita: TComboBox;
    edtDataBaixaEdita: TDateEdit;
    edtHoraInicioEdita: TTimeEdit;
    edtHoraFimEdita: TTimeEdit;
    layImprimiFicha: TLayout;
    Rectangle6: TRectangle;
    Layout15: TLayout;
    C: TRectangle;
    Rectangle5: TRectangle;
    Layout9: TLayout;
    Label21: TLabel;
    Label22: TLabel;
    Layout10: TLayout;
    Edit4: TEdit;
    edtFabFicha: TDateEdit;
    Layout20: TLayout;
    btnImprimiFicha: TRectangle;
    Layout21: TLayout;
    Image8: TImage;
    Label24: TLabel;
    btnCancelaFicha: TRectangle;
    Layout22: TLayout;
    Image9: TImage;
    Label25: TLabel;
    Rectangle8: TRectangle;
    Layout23: TLayout;
    Label26: TLabel;
    Label27: TLabel;
    Label20: TLabel;
    Layout24: TLayout;
    Edit2: TEdit;
    edtPrevisaoFicha: TEdit;
    edtQtdBatida: TSpinBox;
    Rectangle7: TRectangle;
    Layout16: TLayout;
    Label28: TLabel;
    Label29: TLabel;
    Layout17: TLayout;
    edtRacaoFicha: TEdit;
    EditButton2: TEditButton;
    Edit3: TEdit;
    Layout1: TLayout;
    Rectangle2: TRectangle;
    Layout3: TLayout;
    Edit5: TEdit;
    Image3: TImage;
    Layout67: TLayout;
    Rectangle32: TRectangle;
    PTIMA: TLayout;
    Layout68: TLayout;
    Layout69: TLayout;
    lbltipo: TLabel;
    Label5: TLabel;
    Label6: TLabel;
    Label7: TLabel;
    Label8: TLabel;
    cbxTipoBaixa: TComboBox;
    cbxCentroCusto: TComboBox;
    dataFab: TDateEdit;
    edtHoraIni: TTimeEdit;
    edtHoraFim: TTimeEdit;
    Layout4: TLayout;
    Rectangle3: TRectangle;
    Layout5: TLayout;
    Layout6: TLayout;
    Layout7: TLayout;
    Label9: TLabel;
    lblSelectTipo: TLabel;
    Label19: TLabel;
    edtRacaoADD: TEdit;
    btnBuscaAlim: TEditButton;
    edtKGTotal: TEdit;
    Rectangle4: TRectangle;
    Layout8: TLayout;
    Image10: TImage;
    Label10: TLabel;
    edtResponsavel: TEdit;
    EditButton1: TEditButton;
    layInsumos: TLayout;
    gridInsumos: TStringGrid;
    StringColumn1: TStringColumn;
    StringColumn2: TStringColumn;
    StringColumn3: TStringColumn;
    StringColumn4: TStringColumn;
    StringColumn5: TStringColumn;
    StringColumn6: TStringColumn;
    StringColumn7: TStringColumn;
    Layout18: TLayout;
    Label17: TLabel;
    lblTotalPrevisto: TLabel;
    Label18: TLabel;
    lblTotalRealizado: TLabel;
    Label11: TLabel;
    lblValorTotalFab: TLabel;
    qryAyx: TFDQuery;
    procedure TreeItemNovoClick(Sender: TObject);
    procedure TreeItemEditarClick(Sender: TObject);
    procedure TreeItemExcluirClick(Sender: TObject);
    procedure TreeViewItem1Click(Sender: TObject);
    procedure TreeViewItem2Click(Sender: TObject);
    procedure TreeViewItem3Click(Sender: TObject);
   private
    dlg :TFrmmsgDlg;
    procedure MudarAba(ATabItem: TTabItem; sender: TObject);
    procedure MyShowMessage(msg: string; btnCancel: Boolean);
  public
    vAbriSistema:integer;
    vIdRacao,vIdCentroCusto,vIdResponsavel,vIdPremistura:string;
    procedure Filtro;
    procedure CarregaCombo;
    procedure SomarColunasGrid;
    procedure LimpaCampos;
    procedure GerarXLS(DSPadrao: TDataSet);
  end;

var
  frmFabricaRacaoNova: TfrmFabricaRacaoNova;

implementation

{$R *.fmx}
uses UPrincipal, UServiceDB, USeviceConfinamento, UCadRacao, USuplementoMineral,
  UCadUsers, UdmReportConf;

procedure TfrmFabricaRacaoNova.CarregaCombo;
begin
 cbxCentroCusto.Items.Clear;
 cbxCentroCustoEdita.Items.Clear;
 cbxCentroCustoF.Items.Clear;
 cbxCentroCustoF.Items.Add('Todos');
 with qryAux,qryAux.SQL do
 begin
  Clear;
  Add('SELECT * FROM AUX_CENTRO_CUSTO');
  Add('WHERE STATUS=1 AND ID_PROPRIEDADE='+serviceDB.vIdPropriedade);
  Open;
  while not qryAux.Eof do
  begin
    cbxCentroCusto.Items.AddObject(FieldByName('NOME').AsString,
     TObject(FieldByName('ID').AsInteger));
    cbxCentroCustoEdita.Items.AddObject(FieldByName('NOME').AsString,
     TObject(FieldByName('ID').AsInteger));
    cbxCentroCustoF.Items.Add(FieldByName('NOME').AsString);
    qryAux.Next;
  end;
  cbxCentroCusto.ItemIndex  :=-1;
  cbxCentroCustoF.ItemIndex :=0;
 end;
end;

procedure TfrmFabricaRacaoNova.Filtro;
var
 vFiltro,
 vDataIni,
 vDataFim:string;
begin
 vDataIni := FormatDateTime('mm/dd/yyyy',edtFDataEntDE.Date);
 vDataFim := FormatDateTime('mm/dd/yyyy',edtFDataEntAte.Date);
 vFiltro  := ' AND f.DATA_FAB BETWEEN '+vDataIni.QuotedString+' AND '+vDataFim.QuotedString;

 if edtFiltroName.Text.Length>0 then
  vFiltro  := vFiltro+' AND R.ID= '+vIdRacao;

 if edtPreMistura.Text.Length>0 then
  vFiltro  := vFiltro+' AND S.NOME='+edtPreMistura.Text.QuotedString;

 if edtOperadorF.Text.Length>0 then
  vFiltro  := vFiltro+' AND U.NAME LIKE '+QuotedStr('%'+edtOperadorF.Text+'%');
 if cbxCentroCustoF.ItemIndex>0 then
  vFiltro  := vFiltro+' AND A.NOME LIKE '+QuotedStr('%'+cbxCentroCustoF.Selected.Text+'%');
 if cbxTipoBaixaF.ItemIndex>0 then
  vFiltro  := vFiltro+' AND F.TIPO_BAIXA='+intToStr(cbxTipoBaixaF.ItemIndex);
 ServiceConf.AbrirFabricacao(vFiltro);
end;

procedure TfrmFabricaRacaoNova.GerarXLS(DSPadrao: TDataSet);
Var
  Lin, Col   : Integer;
  xExcel     : Variant;
  Conteudo : String;
begin

  Try
   if DSPadrao.RecordCount < 1 then
   begin
     ShowMessage('Nenhum registro a ser exportado');
     Exit;
   end;
   Try
     xExcel:= CreateoleObject('Excel.Application');
     xExcel.WorkBooks.add(1);
     xExcel.caption := 'Titulo da Planilha ';
     xExcel.visible := False;

     DSPadrao.DisableControls;
     DSPadrao.First;

     for Lin := 0 to DSPadrao.RecordCount - 1 do
     begin
       for Col := 1 to DSPadrao.FieldCount do
       begin
         Conteudo := DSPadrao.Fields[Col - 1].AsString;
         xExcel.cells[Lin + 2,Col]:= Conteudo;
       end;

      DSPadrao.Next;
      Application.ProcessMessages;
     end;
     for Col := 1 to DSPadrao.FieldCount do
     begin
       Conteudo := DSPadrao.Fields[Lin - 1].Name;
       xExcel.cells[1,Col] := Conteudo;
       xExcel.Range['A1','Z1'].font.bold := true; // Negrito
       xExcel.Range['A1','Z1'].Interior.Color := $00D6D6D6; // Cor da Célula
       xExcel.Range['A1','Z1'].RowHeight := 25; //Altura da Célula
     end;
     xExcel.visible := True;
     xExcel.columns.Autofit;  //Alinhar automaticamete o tamanho da coluna
   finally
     DSPadrao.EnableControls;
//     Enabled := True;
   end;
  Except
    on e : Exception do
        raise Exception.Create('Erro ao exportar planilha ' +#13+
                               '================'+#13+#13+
                               'Menssagem : ' + E.Message +#13+
                               'Classe : '    + E.ClassName);
  end;
end;

procedure TfrmFabricaRacaoNova.LimpaCampos;
begin
 cbxTipoBaixa.ItemIndex   :=-1;
 cbxCentroCusto.ItemIndex :=-1;
 edtRacaoADD.Text         :='';
 edtKGTotal.Text          :='';
 edtResponsavel.Text      :='';
end;

procedure TfrmFabricaRacaoNova.MudarAba(ATabItem: TTabItem; sender: TObject);
begin
   actMudarAba.Tab := ATabItem;
   actMudarAba.ExecuteTarget(sender);
end;

procedure TfrmFabricaRacaoNova.MyShowMessage(msg: string; btnCancel: Boolean);
begin
 dlg := TFrmmsgDlg.Create(nil);
  dlg.Position := TFormPosition.ScreenCenter;
  dlg.msg.Text := msg;
  dlg.btnCancel.Visible := btnCancel;
  dlg.ShowModal(
  procedure(ModalResult: TModalResult)
  begin
    frmPrincipal.vConfirma := dlg.vBntConfirmaMsg;
  end);
end;

procedure TfrmFabricaRacaoNova.SomarColunasGrid;
var
  Sum,sum1 : Double;
  Val,val1 : Double;
  I   : Integer;
begin
  Sum := 0;
  I   := 0;
  for I := 0 to gridInsumos.RowCount do
  begin
   if TryStrToFloat(gridInsumos.Cells[2,I],Val) then
    Sum := Sum + Val;
  if TryStrToFloat(gridInsumos.Cells[6,I],Val1) then
   Sum1 := Sum1 + Val*Val1;
  end;
  if I>0 then
  begin
    lblTotalRealizado.Text    := FloatToStr(Sum);
    lblValorTotalFab.Text     := FloatToStr(Sum1);
  end
  else
  begin
    lblTotalRealizado.Text    := '0.00';
    lblValorTotalFab.Text     := '0.00';
  end;
end;

procedure TfrmFabricaRacaoNova.TreeItemEditarClick(Sender: TObject);
begin
if ServiceConf.TFabricacaoID.AsString.Length>0 then
  begin
    ServiceConf.TFabricacao.Edit;
    edtDataBaixaEdita.Date        := ServiceConf.TFabricacaoDATA_FAB.AsDateTime;
    cbxTipoBaixaEdita.ItemIndex   := cbxTipoBaixaEdita.items.IndexOf(ServiceConf.TFabricacaoTIPO_BAIXA_STR.AsString);
    cbxCentroCustoEdita.ItemIndex := cbxCentroCustoEdita.items.IndexOf(ServiceConf.TFabricacaoCENTROCUSTO.AsString);
    edtHoraInicioEdita.Time       := ServiceConf.TFabricacaoHORA_INICIO.AsDateTime;
    edtHoraFimEdita.Time          := ServiceConf.TFabricacaoHORA_FIM.AsDateTime;
    layPopUpCad.Visible           := TRUE;
  end;
end;

procedure TfrmFabricaRacaoNova.TreeItemExcluirClick(Sender: TObject);
begin
  MyShowMessage('DesejaPr Realmente Excluir essa Fabricação??',TRUE);
  case DLG.vBntConfirmaMsg of
  1:
  begin
      try
       ServiceConf.TFabricacao.Edit;
       ServiceConf.TFabricacaoSTATUS.AsInteger               :=-1;
       ServiceConf.TFabricacaoID_USUARIO_ALTERACAO.AsString  :=serviceDB.vIdUserLogado;
       ServiceConf.TFabricacaoDATA_ALTERACAO.AsDateTime      :=now;
       ServiceConf.TFabricacao.ApplyUpdates(-1);
       MyShowMessage('Registro excluido com Sucesso!',false);
       Filtro;
       if ServiceConf.TFabricacaoID.AsString.Length>0 then
        ServiceConf.AbrirFabricacaoInsumos(ServiceConf.TFabricacaoID.AsString)
       else
        ServiceConf.AbrirFabricacaoInsumos('0')
      except
      on E : Exception do
       begin
         MyShowMessage('Exception message = '+E.Message,false);
       end;
      end;
  end;
  2:
   begin
     MyShowMessage('Operação Abortada',false);
   end;
  end;

end;

procedure TfrmFabricaRacaoNova.TreeItemNovoClick(Sender: TObject);
begin
 LimpaCampos;
 CarregaCombo;
 ServiceConf.TFabricacao.Close;
 ServiceConf.TFabricacao.Open;
 ServiceConf.TFabricacao.Insert;
 edtKGTotal.Text            := '';
 layInsumos.Visible         := false;
 layBtnControls.Enabled     := false;

 MudarAba(tbiCad,Sender);

end;

procedure TfrmFabricaRacaoNova.TreeViewItem1Click(Sender: TObject);
begin
  layImprimiFicha.Visible  := true;
end;

procedure TfrmFabricaRacaoNova.TreeViewItem2Click(Sender: TObject);
var
 vFiltro,
 vDataIni,
 vDataFim:string;
begin
 vDataIni := FormatDateTime('mm/dd/yyyy',edtFDataEntDE.Date);
 vDataFim := FormatDateTime('mm/dd/yyyy',edtFDataEntAte.Date);
 vFiltro  := ' AND f.DATA_FAB BETWEEN '+vDataIni.QuotedString+' AND '+vDataFim.QuotedString;
 if edtFiltroName.Text.Length>0 then
  vFiltro  := vFiltro+' AND R.NOME LIKE '+QuotedStr('%'+edtFiltroName.Text+'%');
 if edtOperadorF.Text.Length>0 then
  vFiltro  := vFiltro+' AND U.NAME LIKE '+QuotedStr('%'+edtOperadorF.Text+'%');
 if cbxCentroCustoF.ItemIndex>0 then
  vFiltro  := vFiltro+' AND A.NOME LIKE '+QuotedStr('%'+cbxCentroCustoF.Selected.Text+'%');
 if cbxTipoBaixaF.ItemIndex>0 then
  vFiltro  := vFiltro+' AND F.TIPO_BAIXA '+intToStr(cbxTipoBaixaF.ItemIndex);
 ServiceConf.ExportacaoFabricacao(vFiltro);
 if not ServiceConf.ExportaFabricacao.IsEmpty then
 begin
  if SaveDialog1.Execute then
   frmPrincipal.ExpTXT(ServiceConf.ExportaFabricacao,SaveDialog1.FileName);
   MyShowMessage('Arquivo gerado com sucesso :'+#13+SaveDialog1.FileName,false);
 end
 else
  MyShowMessage('Sem dados para exportar!',false);
end;

procedure TfrmFabricaRacaoNova.TreeViewItem3Click(Sender: TObject);
begin
 dmRelConf.GeraRelBaixaInsumo(
   edtFDataEntDE.Text,
   edtFDataEntAte.Text,
   intToSTR(cbxTipoBaixaF.ItemIndex),
   cbxCentroCustoF.Selected.Text.QuotedString,
   edtFiltroName.Text.QuotedString,
   edtOperadorF.Text.QuotedString);
end;

end.
