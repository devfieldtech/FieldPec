ALTER TABLE CONFIG_MANEJO ADD TIPO_MOV INTEGER;

SET TERM ^ ;
CREATE OR ALTER trigger racao_au0 for racao
active after update position 0
AS
begin
  if (NEW.valorkg<>OLD.valorkg) then
  begin
    insert into HIST_VALOR_RACAO(ID_RACAO,DATA_ALTERACAO,VALOR_MEDIO,ID_USUARIO,ID_PROPRIEDADE)
    VALUES
    (new.id,new.dataformulacao,new.valorkg,coalesce(NEW.idusuarioalteracao,new.idusuario),NEW.id_propriedade);
  end
end^
SET TERM ; ^

ALTER TABLE aux_notas_leitura ALTER nota TYPE decimal(18,2);

SET TERM ^ ;
create or alter procedure FICHA_FABRICACAO_PRE (
    DATA_FAB date,
    RACAO_ID integer,
    PREVISTO_KG decimal(15,3),
    QTD_FABRICACAO integer)
returns (
    DATA_FAB_R date,
    RACAO varchar(100),
    PREVISTO_KG_R decimal(15,3),
    FABRICACAO_NUMERO integer,
    INSUMO varchar(100),
    PREV_INSUMO decimal(15,3),
    REAL_INSUMO decimal(15,3))
as
declare variable VCONSUMOINI decimal(18,2);
declare variable I integer;
declare variable VGTPINI decimal(18,2);
BEGIN
 I=1;
 while(:I<=:QTD_FABRICACAO) DO 
 BEGIN
  FOR
  SELECT
   R.NOME RACAO,
   b.NOME INSUMO,
   CAST(:PREVISTO_KG AS DOUBLE PRECISION)*
   (CAST(a.MN_INCLUSAO_PERCENT AS DOUBLE PRECISION)/CAST(100 AS DOUBLE PRECISION)) Previsto, 
   cast(0 as decimal(15,3)) Realizado
  FROM MINERAL_FORMULACAO A
  JOIN ALIMENTO B ON A.ID_ALIMENTO=B.ID
  JOIN SUPLEMENTO_MINERAL R ON R.ID=A.ID_MINERAL
  WHERE A.STATUS=1 AND A.ID_MINERAL=:RACAO_ID
  INTO:RACAO,:INSUMO,:PREV_INSUMO,:REAL_INSUMO
  DO 
  BEGIN 
    FABRICACAO_NUMERO =:I;
    DATA_FAB_R        =:DATA_FAB;
    PREVISTO_KG_R     =:PREVISTO_KG;
    SUSPEND;
  END
  I=I+1;
 END 
END
^

SET TERM ; ^


SET TERM ^ ;

create or alter procedure FICHA_FORN (
    IN_DATA_FORN date,
    IN_TRATO integer)
returns (
    DATA_FORN date,
    RACAO varchar(100),
    LOTE integer,
    TRATO integer,
    CURRAL varchar(100),
    PREVISTO_KG decimal(15,3),
    ORDEM INTEGER)
as
declare variable MAX_TRATO integer;
declare variable PREV_ULTIMO decimal(18,2);
BEGIN
 FOR SELECT ID_LOTE,MAX(TRATO),MAX(C.orderm_forn)FROM FORNECIMENTO_CONF A
 JOIN CURRAIS C ON C.ID=A.ID_LOCAL
 WHERE DATA_FORN=:IN_DATA_FORN
 GROUP BY ID_LOTE
 INTO:LOTE,MAX_TRATO,ORDEM
 DO 
 BEGIN
   IF(IN_TRATO>0) THEN --SE FOR FILTRAR POR TRATO
   BEGIN
    IF(IN_TRATO<>MAX_TRATO) THEN 
    BEGIN  
     FOR SELECT
      A.DATA_FORN,
      D.NOME RACAO,
      A.TRATO,
      C.CODIGO,
      A.PREVISTO_MN_KG
     FROM FORNECIMENTO_CONF A
     JOIN LOTE_NUTRICIONAL B ON A.ID_LOTE=B.ID
     JOIN CURRAIS C ON C.ID=A.ID_LOCAL
     JOIN RACAO D ON D.ID=A.ID_RACAO
     LEFT JOIN USERS E ON E.ID=A.ID_MOTORISTA
     WHERE A.STATUS=1 AND A.ID_LOTE=:LOTE AND A.TRATO=:IN_TRATO
     AND A.data_forn=:IN_DATA_FORN
     ORDER BY A.DATA_FORN,D.NOME,TRATO
     INTO:DATA_FORN,:RACAO,:TRATO,:CURRAL,:PREVISTO_KG
     DO 
     BEGIN
       SUSPEND;     
     END
    END
    ELSE--SE FOR O ULTIMO TRATO
    BEGIN
      FOR SELECT
      A.DATA_FORN,
      D.NOME RACAO,
      A.TRATO,
      C.CODIGO,
      (SELECT
       (SUM(PREVISTO_MN_KG)-SUM(REALIZADO_MN_KG))
       FROM FORNECIMENTO_CONF 
       WHERE ID_LOTE=A.ID_LOTE
       AND DATA_FORN=A.DATA_FORN)
     FROM FORNECIMENTO_CONF A
     JOIN LOTE_NUTRICIONAL B ON A.ID_LOTE=B.ID
     JOIN CURRAIS C ON C.ID=A.ID_LOCAL
     JOIN RACAO D ON D.ID=A.ID_RACAO
     LEFT JOIN USERS E ON E.ID=A.ID_MOTORISTA
     WHERE A.STATUS=1 AND A.ID_LOTE=:LOTE AND A.TRATO=:IN_TRATO
     AND A.data_forn=:IN_DATA_FORN
     ORDER BY A.DATA_FORN,D.NOME,TRATO
     INTO:DATA_FORN,:RACAO,:TRATO,:CURRAL,:PREVISTO_KG
     DO 
     BEGIN
       SUSPEND;     
     END
    END
   END
   ELSE--SE  NAO FOR FILTRAR POR TRATO
   BEGIN
    FOR SELECT
      A.DATA_FORN,
      D.NOME RACAO,
      A.TRATO,
      C.CODIGO,
      a.PREVISTO_MN_KG,
      (SELECT
       (SUM(PREVISTO_MN_KG)-SUM(REALIZADO_MN_KG))
       FROM FORNECIMENTO_CONF 
       WHERE ID_LOTE=A.ID_LOTE
       AND DATA_FORN=A.DATA_FORN)
     FROM FORNECIMENTO_CONF A
     JOIN LOTE_NUTRICIONAL B ON A.ID_LOTE=B.ID
     JOIN CURRAIS C ON C.ID=A.ID_LOCAL
     JOIN RACAO D ON D.ID=A.ID_RACAO
     LEFT JOIN USERS E ON E.ID=A.ID_MOTORISTA
     WHERE A.STATUS=1 AND A.ID_LOTE=:LOTE
     AND A.data_forn=:IN_DATA_FORN
     ORDER BY A.DATA_FORN,D.NOME,TRATO
     INTO:DATA_FORN,:RACAO,:TRATO,:CURRAL,:PREVISTO_KG,:PREV_ULTIMO
     DO 
     BEGIN
       IF(:TRATO=:MAX_TRATO) THEN
        PREVISTO_KG=:PREV_ULTIMO;
       SUSPEND;     
     END
   END
 END
END^

SET TERM ; ^

